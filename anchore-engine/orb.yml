version: 2.1
description: anchore engine container security scanning

executors:
  anchore_engine:
    description: |
      The anchore-engine image, useful for stateless image scanning.
      Image includes anchore-cli for interacting with the engine.
      Includes postgresql image preloaded with anchore vulnerability data.
    parameters:
      tag:
        type: string
        default: "v0.2.4"
    environment:
      ANCHORE_CLI_USER: "admin"
      ANCHORE_CLI_PASS: "foobar"
      ANCHORE_CLI_SSL_VERIFY: "n"
    docker:
      - image: anchore/anchore-engine:<< parameters.tag >>
        entrypoint: ""
      - image: anchore/engine-db-preload:<< parameters.tag >>
        name: anchore-db

  anchore_engine_registry:
    description: |
      The anchore-engine image, useful for stateless image scanning.
      Image includes anchore-cli for interacting with the engine.
      Includes postgresql image preloaded with anchore vulnerability data.
      Includes dockerhub registry image to temporarily store local image.
    parameters:
      tag:
        type: string
        default: "v0.2.4"
    environment:
      ANCHORE_CLI_USER: "admin"
      ANCHORE_CLI_PASS: "foobar"
      ANCHORE_CLI_SSL_VERIFY: "n"
    docker:
      - image: anchore/anchore-engine:<< parameters.tag >>
        entrypoint: ""
      - image: anchore/engine-db-preload:<< parameters.tag >>
        name: anchore-db
      - image: registry:latest
        name: anchore-registry

commands:
  push_local_image:
    description: |
      Due to the functionality of anchore engine, images must be pulled from a
      registry. This command pushes a local image to a temporary registry container.
    parameters:
      image_name:
        description: Image repository & tag.
        type: string
    steps:
      - run:
          name: Push local image to temp registry container.
          command: |
            yum install -y docker
            docker tag << parameters.image_name >> anchore-registry:5000/<< parameters.image_name >>
            docker push anchore-registry:5000/<< parameters.image_name >>

  install_ci_tools:
    description: |
      Downloads anchore_ci_tools.py and create symbolic link.
      Must be used on executor with anchore-cli installed.
    steps:
      - run:
          name: Install anchore_ci_tools.py
          command: |
            curl -o /tmp/anchore_ci_tools.py https://raw.githubusercontent.com/anchore/ci-tools/master/scripts/anchore_ci_tools.py
            chmod +x /tmp/anchore_ci_tools.py
            ln -s /tmp/anchore_ci_tools.py /usr/local/bin/anchore_ci_tools

  add_private_registry:
    description: |
      Used for adding a private registry to anchore engine.
      All parameters are required if using this command.
      Must run on executor with anchore-cli installed.
    parameters:
      registry_name:
        description: Name of private registry.
        type: string
        default: "docker.io"
      registry_user:
        description: Username for private registry (use env var to populate).
        type: string
        default: "dockerhub_user"
      registry_pass:
        description: Password for private registry (use env var to populate).
        type: string
        default: "mysecretpassword"
    steps:
      - run:
          name: Add private registry to anchore engine.
          command: |
            anchore_ci_tools --setup
            anchore-cli registry add << parameters.registry_name >> << parameters.registry_user >> << parameters.registry_pass >> --skip-validate

  analyze_image:
    description: |
      Add image to anchore engine and start analyzing.
      image_name is required, timeout is optional.
      Must run on executor with anchore_ci_tools.py installed.
    parameters:
      image_name:
        type: string
        description: Image repository & tag.
      timeout:
        type: string
        default: "300"
        description: Timeout used for Anchore Engine image scanning.
    steps:
      - run:
          name: Analyze image with anchore engine.
          command: |
            anchore_ci_tools --setup
            anchore_ci_tools --analyze --report --image << parameters.image_name >> --timeout << parameters.timeout >>

  setup_engine:
    description: |
      Sets up & starts anchore engine on the anchore/anchore-engine container.
      Must be run on executor with anchore_ci_tools.py installed.
    steps:
      - run:
          name: Setup anchore engine.
          command: anchore_ci_tools --setup

jobs:
  image_scan:
    executor: anchore_engine
    description: |
      Performs a static security analysis of docker container with anchore engine.
      Anchore engine pulls image from public/private docker registries.
      Requires registry credentials to access private images.
    parameters:
      private_registry:
        description: Set to True if image is only accessible from a private registry.
        default: False
        type: boolean
      registry_name:
        description: Name of private registry (eg - docker.io)
        type: string
        default: "docker.io"
      registry_user:
        description: Username for private registry (use env var to populate).
        type: string
        default: "dockerhub_username"
      registry_pass:
        description: Password for private registry (use env var to populate).
        type: string
        default: "mysecretpassword"
      image_name:
        type: string
        description: Image repository & tag.
      timeout:
        type: string
        default: "300"
        description: Timeout used for Anchore Engine image scanning.
    steps:
      - install_ci_tools
      - when:
          condition: << parameters.private_registry >>
          steps:
            - add_private_registry:
                registry_name: << parameters.registry_name >>
                registry_user: << parameters.registry_user >>
                registry_pass: << parameters.registry_pass >>
      - analyze_image:
          image_name: << parameters.image_name >>
          timeout: << parameters.timeout >>
      - store_artifacts:
          path: anchore-reports

  local_image_scan:
    executor: anchore_engine_registry
    description: |
      Performs a static security analysis of docker image with anchore engine.
      Pushes local image to temp registry to be pulled by anchore engine.
    parameters:
      image_name:
        type: string
        description: Image repository & tag.
      timeout:
        type: string
        default: "300"
        description: Timeout used for Anchore Engine image scanning.
    steps:
      - install_ci_tools
      - push_local_image:
          image_name: << parameters.image_name >>
      - analyze_image:
          image_name: anchore-registry:5000/<< parameters.image_name >>
          timeout: << parameters.timeout >>
      - store_artifacts:
          path: anchore-reports
